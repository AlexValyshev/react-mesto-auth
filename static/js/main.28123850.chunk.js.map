{"version":3,"sources":["images/logo-mesto.svg","images/pencil-avatar.svg","images/iv-custo.jpg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/formValidation.js","utils/utils.js","components/PopupWithForm.js","components/Loader.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/DeleteCardPopup.js","utils/api.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","Logo","alt","CurrentUserContext","React","createContext","Card","memo","card","onCardClick","onTrashClick","onCardLike","currentUser","useContext","isOwn","owner","_id","trashButtonClassName","isLiked","likes","some","i","likeButtonClassName","type","onClick","link","name","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","style","backgroundImage","avatar","PencilAvatar","about","map","card_id","key","Footer","Date","getFullYear","ImagePopup","onClose","onCloseOverlay","popupViewContainer","useRef","ref","onLoad","evt","current","width","target","offsetWidth","height","offsetHeight","FormValidator","data","form","this","_form","_inputSelector","inputSelector","_submitButtonSelector","submitButtonSelector","_inactiveButtonClass","inactiveButtonClass","_inputErrorClass","inputErrorClass","_errorClass","errorClass","addEventListener","preventDefault","_setEventListeners","_allInput","Array","from","querySelectorAll","_button","querySelector","_findAllInputs","forEach","input","_input","_checkInputValidity","_toggleSubmitButton","_hideInputError","validity","valid","_showInputError","inputError","id","classList","add","textContent","validationMessage","remove","_containsInvalidInput","setAttribute","removeAttribute","validationConfig","PopupWithForm","title","isOpen","loader","children","onSubmit","useState","formValid","setFormValid","useEffect","formValidation","enableValidation","resetForm","reset","action","method","noValidate","Loader","isLoad","EditProfilePopup","onUpdateUser","setName","description","setDescription","placeholder","minLength","maxLength","required","value","onChange","EditAvatarPopup","onUpdateAvatar","currentAvatar","AddPlacePopup","currentName","currentLink","DeleteCardPopup","onCardDelete","api","baseUrl","headers","_baseUrl","_headers","res","ok","json","Promise","reject","status","fetch","then","resFetch","_promises","getUserInfo","getInitialCards","all","body","JSON","stringify","itemId","cardid","removeLikeCard","addLikeCard","authorization","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddImagePopupOpen","setAddImagePopupOpen","isChangeAvatarPopupOpen","setChangeAvatarPopupOpen","setIsOpen","selectedCard","setSelectedCard","isTrashPopupOpen","setTrashPopupOpen","setCards","setLoad","deleteCard","setDeleteCard","initialUserInfo","UserAvatar","setCurrentUser","closeAllPopups","setTimeout","handleOverlayClose","currentTarget","handleEscClose","getInitialInfo","userInfo","initialCards","catch","err","console","log","document","removeEventListener","Provider","changeLikeStatus","newCard","newCards","item","setUserInfo","addNewCard","setUserAvatar","newAvatar","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.28123850.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-mesto.e889e45f.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil-avatar.34c46850.svg\";","module.exports = __webpack_public_path__ + \"static/media/iv-custo.610cd79a.jpg\";","import React from 'react';\r\nimport Logo from '../images/logo-mesto.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header page__container\">\r\n            <img className=\"header__logo\" src={Logo} alt=\"Логотип Mesto-Russia\" />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nconst Card = React.memo(({ card, onCardClick, onTrashClick, onCardLike}) => {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const isOwn = card.owner._id === currentUser._id;\r\n    const trashButtonClassName = (`${isOwn ? 'photo-place__trash photo-place__trash_visible' : 'photo-place__trash'}`);\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    const likeButtonClassName = (`${isLiked ? 'photo-place__like photo-place__like_active' : 'photo-place__like'}`);\r\n\r\n    function handleClick() {\r\n        onCardClick(card);\r\n    }\r\n\r\n    function handleLikeClick() {\r\n        onCardLike(card);\r\n    }\r\n\r\n    function handleDeleteClick() {\r\n        onTrashClick(card);\r\n    }\r\n\r\n    return (\r\n        <li className=\"photo-place__element\">\r\n            <button type=\"button\" className={trashButtonClassName}\r\n                onClick={handleDeleteClick} />\r\n            <img src={card.link} alt={card.name} className=\"photo-place__image\" onClick={handleClick} />\r\n            <div className=\"photo-place__group\">\r\n                <h2 className=\"photo-place__title\">{card.name}</h2>\r\n                <div className=\"photo-place__group-like\">\r\n                    <button type=\"button\" className={likeButtonClassName} onClick={handleLikeClick}/>\r\n                    <p className=\"photo-place__number-likes\">{card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n});\r\n\r\nexport default Card;","import React from 'react';\r\nimport PencilAvatar from '../images/pencil-avatar.svg';\r\nimport Card from '../components/Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main({ onEditProfile, onAddPlace, onEditAvatar, onCardClick, onTrashClick, cards, onCardLike}) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile page__container\">\r\n                <div className=\"profile__avatar\" onClick={onEditAvatar}\r\n                    style={{ backgroundImage: `url(${currentUser.avatar})` }} >\r\n                    <img className=\"profile__pencil\" src={PencilAvatar} alt=\"Значок редактирования профиля\" />\r\n                </div>\r\n                <div className=\"profile__info\">\r\n                    <div className=\"profile__name-container\">\r\n                        <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n                        <button type=\"button\" className=\"profile__editbutton\" onClick={onEditProfile}/>\r\n                    </div>\r\n                    <p className=\"profile__job\">{currentUser.about}</p>\r\n                </div>\r\n                <button type=\"button\" className=\"profile__addbutton\" onClick={onAddPlace}/>\r\n            </section>\r\n\r\n            <section className=\"photo-place page__container\">\r\n                <ul className=\"photo-place__elements\">\r\n                    {cards.map((card, card_id) =>\r\n                        <Card key={card_id} card={card} onCardClick={onCardClick}\r\n                            onTrashClick={onTrashClick} onCardLike={onCardLike}/>)}\r\n                </ul>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer page__container\">\r\n            <p className=\"footer__copyright\">&copy; {new Date().getFullYear()} Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;       ","import React from 'react';\r\nimport { useRef } from 'react'\r\n\r\nfunction ImagePopup({ card, onClose, onCloseOverlay, }) {\r\n    const popupViewContainer = useRef(null);\r\n    return (\r\n        <section className={card.link ? 'popup popup_opened popup__change-background' : 'popup'} onClick={onCloseOverlay}>\r\n            <div className={card.link ? 'popup__container popup__container-view popup__container_opened'\r\n                : 'popup__container popup__container-view'}>\r\n                <figure className=\"popup__view\" ref={popupViewContainer}>\r\n                    {card.link &&\r\n                        <img className=\"popup__image\"\r\n                            src={card.link} alt={card.name}\r\n                            onLoad={evt => {\r\n                                popupViewContainer.current.style.width = `${evt.target.offsetWidth}px`\r\n                                popupViewContainer.current.style.height = `${evt.target.offsetHeight}px`\r\n                            }\r\n                            } />}\r\n                    <figcaption className=\"popup__caption\">{card.name}</figcaption>\r\n                </figure>\r\n                <button type=\"button\" className=\"popup__close popup__close_view\" onClick={onClose} />\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;   ","export default class FormValidator {\r\n    constructor(data, form) {\r\n        this._form = form;\r\n        this._inputSelector = data.inputSelector;\r\n        this._submitButtonSelector = data.submitButtonSelector;\r\n        this._inactiveButtonClass = data.inactiveButtonClass;\r\n        this._inputErrorClass = data.inputErrorClass;\r\n        this._errorClass = data.errorClass;\r\n    }\r\n\r\n    // Функция валидации формы\r\n    enableValidation() {\r\n        this._form.addEventListener('submit', (evt) => {\r\n            evt.preventDefault();\r\n        });\r\n        this._setEventListeners();\r\n    }\r\n\r\n    // Функция поиска всех полей формы и кнопки сабмита\r\n    _findAllInputs() {\r\n        this._allInput = Array.from(this._form.querySelectorAll(this._inputSelector));\r\n        this._button = this._form.querySelector(this._submitButtonSelector);\r\n    }\r\n    // Функция установки слушателей на все поля в форме.\r\n    _setEventListeners() {\r\n        this._findAllInputs();\r\n        this._allInput.forEach((input) => {\r\n            input.addEventListener('input', () => {\r\n                this._input = input;\r\n                this._checkInputValidity();\r\n                this._toggleSubmitButton();\r\n            });\r\n        });\r\n    }\r\n\r\n    // функция очистки форм от ошибок если при их наличии происходит закрытие попапа нажатием на \"Esc\", \"Оверлей\" или \"Крестик\".\r\n    resetForm() {\r\n        this._findAllInputs();\r\n        this._allInput.forEach((input) => {\r\n            this._input = input;\r\n            this._hideInputError();\r\n            this._toggleSubmitButton();\r\n        });\r\n    }\r\n\r\n\r\n    // Функция валидации полей формы.\r\n    _checkInputValidity() {\r\n        if (!this._input.validity.valid) {\r\n            this._showInputError();\r\n        } else {\r\n            this._hideInputError();\r\n        }\r\n    };\r\n\r\n    // Функция добавления и стилизации ошибки, при невалидности поля формы.\r\n    _showInputError() {\r\n        const inputError = this._form.querySelector(`#${this._input.id}-error`);\r\n        this._input.classList.add(this._inputErrorClass);\r\n        inputError.textContent = this._input.validationMessage;\r\n        inputError.classList.add(this._errorClass);\r\n    };\r\n\r\n    // Функция удаления стилизации и ошибки, при валидности поля формы.\r\n    _hideInputError() {\r\n        const inputError = this._form.querySelector(`#${this._input.id}-error`);\r\n        this._input.classList.remove(this._inputErrorClass);\r\n        inputError.classList.remove(this._errorClass);\r\n        inputError.textContent = '';\r\n    };\r\n\r\n    // Функция переключения кнопки.\r\n    _toggleSubmitButton() {\r\n        if (this._containsInvalidInput(this._allInput)) {\r\n            this._button.classList.add(this._inactiveButtonClass);\r\n            this._button.setAttribute('disabled', true);\r\n        } else {\r\n            this._button.classList.remove(this._inactiveButtonClass);\r\n            this._button.removeAttribute('disabled');\r\n        }\r\n    };\r\n\r\n    // Функция проверки наличия невалидных полей в форме.\r\n    _containsInvalidInput() {\r\n        return this._allInput.some((input) => {\r\n            return !input.validity.valid;\r\n        });\r\n    }\r\n}\r\n\r\n","export const validationConfig = ({\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'popup__button_disabled',\r\n    inputErrorClass: 'popup__input_type_error',\r\n    errorClass: 'popup__error_visible'\r\n});\r\n\r\n\r\n","import React from 'react';\r\nimport FormValidator from '../utils/formValidation.js';\r\nimport { validationConfig } from '../utils/utils.js'\r\n\r\nfunction PopupWithForm({ title, name, isOpen, loader, onClose, children, onSubmit, onCloseOverlay }) {\r\n    const form = React.useRef(null);\r\n    const [formValid, setFormValid] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        const formValidation = new FormValidator(validationConfig, form.current);\r\n        formValidation.enableValidation();\r\n        setFormValid(formValidation);\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        isOpen ? formValid.resetForm() : form.current.reset();\r\n    }, [isOpen]);\r\n\r\n    return (\r\n        <section className={isOpen ? 'popup popup_opened' : 'popup'}\r\n            onClick={onCloseOverlay}>\r\n            <div className={isOpen ? `popup__container popup__container-form popup__container_${name} \r\n            popup__container_opened ` : `popup__container popup__container-form popup__container_${name}`}>\r\n                <form name={`form-${name}`} action=\"#\" method=\"post\"\r\n                    onSubmit={onSubmit}\r\n                    className={`popup__form popup__form_${name}`}\r\n                    noValidate\r\n                    ref={form}>\r\n                    <h3 className=\"popup__form-heading\">{title}</h3>\r\n                    {children}\r\n                    <button className={`popup__button popup__button-text popup__button_save-${name}`} type=\"submit\">\r\n                        {loader}\r\n                    </button>\r\n                </form>\r\n                <button type=\"button\" className={`popup__close popup__close_container-${name}`} onClick={onClose} />\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction Loader({ isLoad }) {\r\n    return (\r\n        <>\r\n            <p className={`popup__button-text ${isLoad && 'popup__button-text_disabled'}`} >Сохранить </p>\r\n            <p className={`popup__button-text ${!isLoad && 'popup__button-text_disabled'}`}>Сохранение...</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Loader;   ","import React from 'react';\r\nimport PopupWithForm from '../components/PopupWithForm';\r\nimport Loader from '../components/Loader';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser, onCloseOverlay, isLoad }) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n\r\n    function handleNameChange(evt) {\r\n        setName(evt.target.value);\r\n    }\r\n\r\n    function handleJobChange(evt) {\r\n        setDescription(evt.target.value);\r\n    }\r\n    \r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [isOpen,currentUser]);\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        onUpdateUser({\r\n            name,\r\n            about: description\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm title='Редактировать профиль' name='profile' loader={<Loader isLoad={isLoad} />}\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            onCloseOverlay={onCloseOverlay} >\r\n            <fieldset className=\"popup__info\">\r\n                <input className=\"popup__input popup__input_name\" type=\"text\" id=\"name-input\" name=\"name\"\r\n                    placeholder=\"Имя\" minLength='2' maxLength=\"40\" required\r\n                    value={name}\r\n                    onChange={handleNameChange} />\r\n                <span id=\"name-input-error\" className=\"popup__error\" />\r\n                <input className=\"popup__input popup__input_job\" type=\"text\" id=\"job-input\" name=\"job\"\r\n                    placeholder=\"О себе\" minLength=\"2\" maxLength=\"200\" required\r\n                    value={description}\r\n                    onChange={handleJobChange} />\r\n                <span id=\"job-input-error\" className=\"popup__error\" />\r\n            </fieldset>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from '../components/PopupWithForm';\r\nimport Loader from '../components/Loader';\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar, onCloseOverlay, isLoad }) {\r\n    const currentAvatar = React.useRef(null);\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        onUpdateAvatar({\r\n            avatar: currentAvatar.current.value,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm title='Обновить аватар' name='avatar'\r\n            loader={<Loader isLoad={isLoad} />}\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            onCloseOverlay={onCloseOverlay}>\r\n            <fieldset className=\"popup__info\" >\r\n                <input className=\"popup__input popup__input_avatar\" type=\"url\" id=\"avatar-input\" name=\"avatar\"\r\n                    placeholder=\"Ссылка на новый аватар\" required ref={currentAvatar}/>\r\n                <span id=\"avatar-input-error\" className=\"popup__error\" />\r\n            </fieldset>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from '../components/PopupWithForm';\r\nimport Loader from '../components/Loader';\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace, onCloseOverlay, isLoad }) {\r\n    const currentName = React.useRef('');\r\n    const currentLink = React.useRef('');\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        onAddPlace({\r\n            name: currentName.current.value,\r\n            link: currentLink.current.value,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm title='Новое место' name='cards' loader={<Loader isLoad={isLoad} />}\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            onCloseOverlay={onCloseOverlay}>\r\n            <fieldset className=\"popup__info\">\r\n                <input className=\"popup__input popup__input_card-name\" type=\"text\" id=\"card-input\" name=\"card\"\r\n                    placeholder=\"Название\" minLength=\"1\" maxLength=\"30\" required\r\n                    ref={currentName}/>\r\n                <span id=\"card-input-error\" className=\"popup__error\" />\r\n                <input className=\"popup__input popup__input_link\" type=\"url\" id=\"link-input\" name=\"link\"\r\n                    placeholder=\"Сссылка на картинку\" required\r\n                    ref={currentLink}/>\r\n                <span id=\"link-input-error\" className=\"popup__error\" />\r\n            </fieldset>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport PopupWithForm from '../components/PopupWithForm';\r\n\r\nfunction DeleteCardPopup({ isOpen, onClose, card, onCardDelete, onCloseOverlay }) {\r\n    \r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        onCardDelete(card)\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm title='Вы уверены?' name='trash' loader='Да'\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            onCloseOverlay={onCloseOverlay}/>\r\n    );\r\n}\r\n\r\nexport default DeleteCardPopup;","class Api {\r\n    constructor({ baseUrl, headers }) {\r\n        this._baseUrl = baseUrl\r\n        this._headers = headers\r\n    }\r\n\r\n    resFetch(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`)\r\n    }\r\n\r\n    getUserInfo() { // Запрос на загрузку данных пользователя\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            headers: this._headers\r\n        })\r\n            .then(this.resFetch);\r\n    }\r\n\r\n    getInitialCards() { // Запрос на загрузку карточек\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            headers: this._headers\r\n        })\r\n            .then(this.resFetch);\r\n    }\r\n\r\n    getInitialInfo() {\r\n        this._promises = [this.getUserInfo(), this.getInitialCards()];\r\n        return Promise.all(this._promises);\r\n    }\r\n\r\n    setUserInfo({ name, about }) { // Запрос на обновление данных пользователя\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: `${name}`,\r\n                about: `${about}`\r\n            })\r\n        })\r\n            .then(this.resFetch);\r\n    }\r\n\r\n    addNewCard({ name, link }) { // Запрос на добавление новой карточки\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: `${name}`,\r\n                link: `${link}`\r\n            })\r\n        })\r\n            .then(this.resFetch);\r\n    }\r\n\r\n    deleteCard(itemId) { // Запрос на удаление карточки\r\n        return fetch(`${this._baseUrl}/cards/${itemId}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        })\r\n            .then(this.resFetch);\r\n    }\r\n\r\n    setUserAvatar({ avatar }) { // Запрос на изменение аватара пользователя\r\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: `${avatar}`\r\n            })\r\n        })\r\n            .then(this.resFetch);\r\n    }\r\n\r\n    addLikeCard(itemId) { // Запрос на установку лайка\r\n        return fetch(`${this._baseUrl}/cards/likes/${itemId}`, {\r\n            method: 'PUT',\r\n            headers: this._headers\r\n        })\r\n            .then(this.resFetch);\r\n    }\r\n\r\n    removeLikeCard(itemId) { // Запрос на снятие лайка\r\n        return fetch(`${this._baseUrl}/cards/likes/${itemId}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        })\r\n            .then(this.resFetch);\r\n    }\r\n\r\n    changeLikeStatus(cardid, isLiked) { // Запрос на изменение лайка\r\n        if (isLiked) {\r\n            return this.removeLikeCard(cardid);\r\n        } else {\r\n            return this.addLikeCard(cardid);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const api = new Api({\r\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-14\",\r\n    headers: {\r\n        authorization: \"cede3324-4ffe-44e5-b1e3-3ccfef967867\",\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n});","import React from 'react';\r\nimport Header from '../components/Header';\r\nimport Main from '../components/Main';\r\nimport Footer from '../components/Footer';\r\nimport ImagePopup from '../components/ImagePopup';\r\nimport EditProfilePopup from '../components/EditProfilePopup';\r\nimport EditAvatarPopup from '../components/EditAvatarPopup';\r\nimport AddPlacePopup from '../components/AddPlacePopup';\r\nimport DeleteCardPopup from '../components/DeleteCardPopup';\r\nimport { api } from '../utils/api.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport UserAvatar from '../images/iv-custo.jpg'\r\n\r\nfunction App() {\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddImagePopupOpen, setAddImagePopupOpen] = React.useState(false);\r\n  const [isChangeAvatarPopupOpen, setChangeAvatarPopupOpen] = React.useState(false);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState({});\r\n  const [isTrashPopupOpen, setTrashPopupOpen] = React.useState(false);\r\n  const [cards, setCards] = React.useState([]);\r\n  const [isLoad, setLoad] = React.useState(false);\r\n  const [deleteCard, setDeleteCard] = React.useState({});\r\n  const initialUserInfo = {\r\n    name: 'Жак-Ив Кусто',\r\n    about: 'Исследователь океана',\r\n    avatar: UserAvatar,\r\n  }\r\n  const [currentUser, setCurrentUser] = React.useState(initialUserInfo);\r\n\r\n  function handleEditAvatarClick() {\r\n    setChangeAvatarPopupOpen(true);\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(true);\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setAddImagePopupOpen(true);\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function handleTrashClick(card) {\r\n    setTrashPopupOpen(true);\r\n    setIsOpen(true);\r\n    setDeleteCard(card);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setChangeAvatarPopupOpen(false);\r\n    setEditProfilePopupOpen(false);\r\n    setAddImagePopupOpen(false);\r\n    setTrashPopupOpen(false);\r\n    setSelectedCard({});\r\n    setTimeout(setLoad, 1000);\r\n    setDeleteCard({});\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    api\r\n      .getInitialInfo() // Загрузка карточек и информации о пользователе.\r\n      .then(([userInfo, initialCards]) => {\r\n        setCurrentUser(userInfo);\r\n        setCards(initialCards);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err); // Выведем ошибку в консоль\r\n      });\r\n  }, []);\r\n\r\n  function handleCardLike(card) {// Запрос на установку лайка и дизлайка\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n      api\r\n        .changeLikeStatus(card._id, isLiked)\r\n        .then((newCard) => {\r\n          const newCards = cards.map((item) => item._id === card._id ? newCard : item);\r\n          setCards(newCards);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err); // Выведем ошибку в консоль\r\n        }); \r\n  }\r\n\r\n  function handleCardDelete() { // Запрос на удаление карточки.\r\n    api\r\n        .deleteCard(deleteCard._id)\r\n        .then((res) => {\r\n          const newCards = cards.filter((item) => item._id !== deleteCard._id);\r\n          setCards(newCards);\r\n          closeAllPopups()\r\n        })\r\n        .catch((err) => {\r\n          console.log(err); // Выведем ошибку в консоль\r\n        });       \r\n  }\r\n\r\n  function handleUpdateUser(onUpdateUser) { // Запрос на обновление данных пользователя.\r\n    setLoad(true);\r\n    api\r\n      .setUserInfo(onUpdateUser)\r\n        .then((userInfo) => {\r\n          setCurrentUser(userInfo);\r\n          setTimeout(closeAllPopups, 500);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err); // Выведем ошибку в консоль\r\n        });\r\n  }\r\n\r\n  function handleUpdateAvatar(onUpdateAvatar) { // Запрос на обновление аватара пользователя.\r\n    setLoad(true);\r\n    api\r\n        .setUserAvatar(onUpdateAvatar)\r\n        .then((newAvatar) => {\r\n          setCurrentUser(newAvatar);\r\n          setTimeout(closeAllPopups, 500);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err); // Выведем ошибку в консоль\r\n        });\r\n  }\r\n\r\n  function handleAddPlaceSubmit(onAddPlace) { // Запрос на добавление новой карточки.\r\n    setLoad(true);\r\n    api\r\n        .addNewCard(onAddPlace)\r\n        .then((newCard) => {\r\n          setCards([newCard, ...cards]);\r\n          setTimeout(closeAllPopups, 500);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err); // Выведем ошибку в консоль\r\n        });\r\n  }\r\n\r\n\r\n  function handleOverlayClose(evt) {\r\n    if (evt.target === evt.currentTarget) {\r\n      closeAllPopups();\r\n    }\r\n  }\r\n\r\n  function handleEscClose(evt) {\r\n    if (evt.key === 'Escape') {\r\n      closeAllPopups();\r\n    }   \r\n  }\r\n\r\n  React.useEffect(() => {\r\n    document.addEventListener('keydown', handleEscClose);\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscClose);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page\" >\r\n      <Header />\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <Main onEditProfile={handleEditProfileClick}\r\n          onAddPlace={handleAddPlaceClick}\r\n          onEditAvatar={handleEditAvatarClick}\r\n          onCardClick={handleCardClick}\r\n          onTrashClick={handleTrashClick}\r\n          cards={cards}\r\n          onCardLike={handleCardLike} />\r\n        \r\n        <EditProfilePopup isOpen={isEditProfilePopupOpen ? isOpen : false}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n          onCloseOverlay={handleOverlayClose}\r\n          isLoad={isLoad}/>\r\n        \r\n        <AddPlacePopup isOpen={isAddImagePopupOpen ? isOpen : false}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n          onCloseOverlay={handleOverlayClose}\r\n          isLoad={isLoad}/>\r\n\r\n        <EditAvatarPopup isOpen={isChangeAvatarPopupOpen ? isOpen : false}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n          onCloseOverlay={handleOverlayClose}\r\n          isLoad={isLoad}/>\r\n\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} onCloseOverlay={handleOverlayClose}/>\r\n\r\n        <DeleteCardPopup isOpen={isTrashPopupOpen ? isOpen : false}\r\n          onClose={closeAllPopups}\r\n          card={selectedCard}\r\n          onCardDelete={handleCardDelete}\r\n          onCloseOverlay={handleOverlayClose}/>\r\n      </CurrentUserContext.Provider>   \r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}